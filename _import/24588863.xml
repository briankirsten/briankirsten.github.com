<item>
	<title>InnoDB versus MyISAM</title>
	<link>http://www.briankirsten.com/2006/01/27/innodb-versus-myisam</link>
	<pubDate>Fri Jan 27 17:06:20 -0800 2006</pubDate>
	
	<dc:creator><![CDATA[Brian Kirsten]]></dc:creator>
	
	
		<category domain="tag" nicename="blogbuzzmachine"><![CDATA[blogbuzzmachine]]></category>
	

	<category><![CDATA[Uncategorized]]></category>

	<category domain="category" nicename="uncategorized"><![CDATA[Uncategorized]]></category>

  <guid isPermaLink="false">http://www.briankirsten.com/2006/01/27/innodb-versus-myisam</guid>
	<description></description>
	<content:encoded><![CDATA[So last night the web server <a href="http://www.blogbuzzmachine.com">Blog Buzz Machine</a> is hosted on slowed to a crawl. As the site grows I was seeing more and more slowdown out of both the DB and Web servers. I'd been doing a ton of research on MySQL database tuning in the hope of squeezing some more performance out of the 2 little machines I'm using to run the site. I realized that I stupidly created the database for the system using <a href="http://dev.mysql.com/doc/refman/5.0/en/myisam-storage-engine.html">MyISAM</a> for the storage engine. The plus to it was it supported FULLTEXT indexes which would prove useful for the search side of things. Sadly though after much beating up of the database server I realized that the way MyISAM was working, it was locking up one of the main tables for selects, causing any updates or inserts to queue up (causing maximum connection issues) which ended up slowing the server down. I started looking for other options. I started playing with <a href="http://dev.mysql.com/doc/refman/5.0/en/innodb.html">InnoDB</a> about a week ago, it's a bit more like <a href="http://www.oracle.com/">Oracle</a> (with row-level locking/transactions) and I came across several articles on the wonderfull-ness of InnoDB so I figured I would give it a try.

What a change....last night I finished moving the main tables to InnoDB and the difference is like night-and-day. My only gripe is that InnoDB doesn't seem to support FULLTEXT indexes so I'll need to figure out something with that. But hopefully the system as a whole seems a bit quicker, plus we're up to over 475,000 pinging blogs now. This little programming experiment has turned into a whole lot of work!]]></content:encoded>
	<excerpt:encoded><![CDATA[So last night the web server Blog Buzz Machine is hosted on slowed to a crawl. As the site grows I was seeing more and more slowdown out of both the DB and Web servers. I'd been doing a ton of research on MySQL database tuning in the hope of squee...]]></excerpt:encoded>	

	<wp:post_date>Fri Jan 27 17:06:20 -0800 2006</wp:post_date>
	<wp:post_date_gmt>%= display_date %></wp:post_date_gmt>
	<wp:comment_status>open</wp:comment_status>
	<wp:ping_status>open</wp:ping_status>
	<wp:post_name>2006/01/27/innodb-versus-myisam</wp:post_name>
	<wp:status>publish</wp:status>
	<wp:post_parent>0</wp:post_parent>
	<wp:menu_order>0</wp:menu_order>
	<wp:post_type>post</wp:post_type>
	<wp:post_password></wp:post_password>
	<wp:is_sticky>0</wp:is_sticky>

	
</item>
